{% extends '@EasyAdmin/page/content.html.twig' %}

{% block content %}
	<div class="container py-4">
		<div
			class="row">
			<!-- Cartes statistiques -->
			{% for card in [
            {'title': 'Produits', 'value': totalProduits, 'color': 'primary', 'url': urls.produits},
            {'title': 'Clients', 'value': totalClients, 'color': 'success', 'url': urls.clients},
            {'title': 'Commandes Vente', 'value': totalCommandesVente, 'color': 'warning', 'url': urls.commandes_vente},
            {'title': 'Commandes Achat', 'value': totalCommandesAchat, 'color': 'danger', 'url': urls.commandes_achat}
        ] %}
				<div class="col-md-3">
					<div class="card text-white bg-{{ card.color }} mb-3">
						<div class="card-body">
							<h5 class="card-title">{{ card.title }}</h5>
							<p class="card-text fs-4">{{ card.value }}</p>
							<a href="{{ card.url }}" class="btn btn-light btn-sm">Voir</a>
						</div>
					</div>
				</div>
			{% endfor %}
		</div>

		<!-- Sélecteur de type de graphique -->
		<div class="d-flex justify-content-between align-items-center mt-4">
			<h4>Évolution des commandes</h4>
			<div>
				<label class="me-2">Type de graphique :</label>
				<select id="chartTypeSelector" class="form-select d-inline w-auto">
					<option value="line">Ligne</option>
					<option value="bar">Barres</option>
					<option value="radar">Radar</option>
				</select>
				<button class="btn btn-outline-secondary btn-sm ms-2" id="downloadChart">Télécharger PNG</button>
			</div>
		</div>

		<!-- Graphique principal -->
		<div class="card shadow mt-3">
			<div class="card-body">
				<canvas id="lineChart" height="100"></canvas>
			</div>
		</div>

		<!-- Deuxième graphique en ruban -->
		<div class="card shadow mt-5">
			<div class="card-body">
				<h5 class="card-title">Comparaison ventes / achats (ruban)</h5>
				<canvas id="barChart" height="100"></canvas>
			</div>
		</div>
	</div>

	<!-- Chart.js -->
	<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
	<script>
		const ventes = {{ ventesParMois|json_encode()|raw }};
const achats = {{ achatsParMois|json_encode()|raw }};

const labels = ventes.map(item => item.mois);
const ventesData = ventes.map(item => item.total);
const achatsData = achats.map(item => item.total);

const ctx = document.getElementById('lineChart').getContext('2d');
const ctxBar = document.getElementById('barChart').getContext('2d');
let currentChart = null;

function createChart(type) {
if (currentChart) 
currentChart.destroy();


const isRadar = type === 'radar';
const fill = type === 'line';

currentChart = new Chart(ctx, {
type: type,
data: {
labels: labels,
datasets: [
{
label: 'Commandes Vente',
data: ventesData,
borderColor: 'rgba(75, 192, 192, 1)',
backgroundColor: isRadar ? 'rgba(75, 192, 192, 0.3)' : 'rgba(75, 192, 192, 0.5)',
fill: fill,
hidden: false,
tension: 0.4,
borderWidth: 2
}, {
label: 'Commandes Achat',
data: achatsData,
borderColor: 'rgba(255, 99, 132, 1)',
backgroundColor: isRadar ? 'rgba(255, 99, 132, 0.3)' : 'rgba(255, 99, 132, 0.5)',
fill: fill,
hidden: false,
tension: 0.4,
borderWidth: 2
}
]
},
options: {
responsive: true,
plugins: {
legend: {
display: true,
onClick: (e, legendItem, legend) => {
const index = legendItem.datasetIndex;
const ci = legend.chart;
const meta = ci.getDatasetMeta(index);
meta.hidden = meta.hidden === null ? ! ci.data.datasets[index].hidden : null;
ci.update();
}
}
},
scales: ! isRadar ? {
y: {
beginAtZero: true,
ticks: {
stepSize: 1,
precision: 0
},
title: {
display: true,
text: 'Nombre de commandes'
}
},
x: {
title: {
display: true,
text: 'Mois'
}
}
} : {}
}
});
}

// Deuxième graphique : barres empilées
new Chart(ctxBar, {
type: 'bar',
data: {
labels: labels,
datasets: [
{
label: 'Commandes Vente',
data: ventesData,
backgroundColor: 'rgba(75, 192, 192, 0.6)'
}, {
label: 'Commandes Achat',
data: achatsData,
backgroundColor: 'rgba(255, 99, 132, 0.6)'
}
]
},
options: {
responsive: true,
plugins: {
legend: {
position: 'top'
}
},
scales: {
x: {
stacked: true
},
y: {
stacked: true,
beginAtZero: true,
ticks: {
stepSize: 1,
precision: 0
}
}
}
}
});

// Initialisation
createChart('line');

// Sélecteur de type
document.getElementById('chartTypeSelector').addEventListener('change', function () {
createChart(this.value);
});

// Bouton de téléchargement
document.getElementById('downloadChart').addEventListener('click', function () {
const a = document.createElement('a');
a.href = document.getElementById('lineChart').toDataURL('image/png');
a.download = 'graphique_commandes.png';
a.click();
});
	</script>
{% endblock %}
